def test(kb):
	kb.prove([(memberchk, 3, [1,2,3,3,3,3])])
	kb.prove([(memberchk, 3, [1,2,3,4,5,6])])
	kb.prove([(append, [1], [2], X)])
	kb.prove([(append, [1,2],[3],X)])
	kb.prove([(append, X, Y, [1,2,3])])
	kb.prove([(prefix, [1,2], [1,2,3,4])])
	kb.prove([(prefix, [5], [1,2,3,4])])
	kb.prove([(prefix, X, [1,2,3,4])])
	kb.prove([(select, X, [1,2,3,4], [1,2,3])])
	kb.prove([(selectchk, X, [1,2,3,4], [1,2,3])])
	kb.prove([(select, Y, [1,2,3], 2, X)])
	kb.prove([(last, [1,2,3,4], X)])
	kb.prove([(same_length, [1,2], [3,4])])
	kb.prove([(same_length, [1,2], [3,4,5])])
	kb.prove([(same_length, X, [3,4])])
	kb.prove([(member, 8, [1,2,3,5,6])])
	kb.prove([(member, X, [1,2,3,4,5,6])])
	kb.prove([(reverse, [1,2,3,5,6],X)])
	kb.prove([(reverse, [1,2,3],X)])
	kb.prove([(reverse, X, [1,2,3,5,6])])
	kb.prove([(reverse, X, [1])])
	kb.prove([(union, [2,3,7,8], [1,2,3,4,5,6], X)])
	kb.prove([(intersection, [2,3,7,8], [1,2,3,4,5,6], X)])
	kb.prove([(subset, [2,3,7,8], [1,2,3,4,5,6])])
	kb.prove([(subset, [2,3], [1,2,3,4,5,6])])
	kb.prove([(subset, X, [1,2,3,4,5,6])])
	kb.prove([(subtract, [2,3,7,8], [1,2,3,4,5,6], X)])
	kb.prove([(subtract, [1,2,3,4,5,6], [2,3,7,8], X)])
